
true
#line 73 "trace_assertion_failed_19.c"
x = 0;

(and (<= x 0 ) (<= 0 x ) )
#line 81
in_T2 = 2;

(and (<= x 0 ) (<= 0 x ) (= (+ in_T2 (- 2 ) ) 0 ) )
if ((= (+ (- 2) in_T2 ) 0 ))
#line 83
i_T2 = 0;

(let ((.cse0 (= (+ in_T2 (- 2 ) ) 0 )) (.cse1 (<= i_T2 0 )) ) (and (<= x 0 ) (<= 0 x ) .cse0 (and .cse1 .cse0 ) (and .cse0 .cse1 ) ))
if ((< (+ (- 9) i_T2 ) 0 ) && (= (+ (- 2) in_T2 ) 0 ))
#line 85
tmp_T2 = x;

(let ((.cse0 (= (+ in_T2 (- 2 ) ) 0 )) (.cse5 (<= i_T2 0 )) ) (let ((.cse3 (<= (+ i_T2 (- 8 ) ) 0 )) (.cse4 (and .cse0 .cse5 )) ) (let ((.cse1 (and .cse5 .cse0 )) (.cse2 (or .cse3 .cse4 )) ) (and (or (and (<= tmp_T2 0 ) (<= 0 tmp_T2 ) .cse0 .cse1 .cse2 ) (and .cse0 (and (not .cse3 ) .cse4 ) ) ) .cse0 .cse1 .cse2 ))))
if ((< (+ (- 9) i_T2 ) 0 ) && (= (+ (- 2) in_T2 ) 0 ))
#line 86
tmp_T2 = 10 + tmp_T2;

(let ((.cse3 (<= i_T2 0 )) (.cse0 (= (+ in_T2 (- 2 ) ) 0 )) ) (let ((.cse4 (and .cse3 .cse0 )) ) (and (let ((.cse2 (<= (+ i_T2 (- 8 ) ) 0 )) ) (let ((.cse1 (and (not .cse2 ) .cse3 )) ) (or (and (or (and (or (and (<= tmp_T2 10 ) (<= 0 (+ tmp_T2 (- 10 ) ) ) ) (and .cse0 .cse1 ) ) .cse0 (or .cse2 .cse3 ) .cse4 ) .cse1 ) .cse0 .cse4 ) .cse1 ))) .cse0 .cse4 )))
if ((< (+ (- 9) i_T2 ) 0 ) && (= (+ (- 2) in_T2 ) 0 ))
#line 87
x = tmp_T2;

(let ((.cse0 (= (+ in_T2 (- 2 ) ) 0 )) ) (and (<= x 10 ) (<= 0 (+ x (- 10 ) ) ) .cse0 (and (<= i_T2 0 ) .cse0 ) ))
if ((= (+ (- 2) in_T2 ) 0 ))
#line 89
i_T2 = 1 + i_T2;

(and (<= x 10 ) (<= 0 (+ x (- 10 ) ) ) (= (+ in_T2 (- 2 ) ) 0 ) (<= i_T2 1 ) )
if ((< (+ (- 9) i_T2 ) 0 ) && (= (+ (- 2) in_T2 ) 0 ))
#line 91
tmp_T2 = x;

(let ((.cse2 (<= (+ i_T2 (- 8 ) ) 0 )) (.cse3 (<= i_T2 1 )) ) (let ((.cse0 (= (+ in_T2 (- 2 ) ) 0 )) (.cse1 (or .cse2 .cse3 )) ) (and (or (and (<= tmp_T2 10 ) (<= 0 (+ tmp_T2 (- 10 ) ) ) .cse0 .cse1 ) (and .cse0 (and (not .cse2 ) .cse3 ) ) ) .cse0 .cse1 )))
if ((< (+ (- 9) i_T2 ) 0 ) && (= (+ (- 2) in_T2 ) 0 ))
#line 92
tmp_T2 = 10 + tmp_T2;

(let ((.cse0 (not (<= (+ i_T2 (- 8 ) ) 0 ) )) (.cse1 (and (= (+ in_T2 (- 2 ) ) 0 ) (and (<= tmp_T2 20 ) (<= 0 (+ tmp_T2 (- 20 ) ) ) ) )) ) (or (and (not .cse0 ) .cse1 ) (ite .cse0 (<= i_T2 1 ) .cse1 ) ))
if ((< (+ (- 9) i_T2 ) 0 ) && (= (+ (- 2) in_T2 ) 0 ))
#line 93
x = tmp_T2;

(and (<= x 20 ) (<= 0 (+ x (- 20 ) ) ) )
#line 98
in_T3 = 1;

(and (<= x 20 ) (<= 0 (+ x (- 20 ) ) ) (= (+ in_T3 (- 1 ) ) 0 ) )
if ((= (+ (- 1) in_T3 ) 0 ))
#line 100
i_T3 = 0;

(let ((.cse0 (= (+ in_T3 (- 1 ) ) 0 )) (.cse1 (<= i_T3 0 )) ) (and (<= x 20 ) (<= 0 (+ x (- 20 ) ) ) .cse0 (and .cse1 .cse0 ) (and .cse0 .cse1 ) ))
if ((< (+ (- 9) i_T3 ) 0 ) && (= (+ (- 1) in_T3 ) 0 ))
#line 102
tmp_T3 = x;

(let ((.cse4 (<= i_T3 0 )) (.cse0 (= (+ in_T3 (- 1 ) ) 0 )) ) (let ((.cse1 (and .cse4 .cse0 )) ) (and (let ((.cse2 (<= (+ i_T3 (- 8 ) ) 0 )) (.cse3 (and .cse0 .cse4 )) ) (or (and (<= tmp_T3 20 ) (<= 0 (+ tmp_T3 (- 20 ) ) ) .cse0 .cse1 (or .cse2 .cse3 ) ) (and .cse0 (and (not .cse2 ) .cse3 ) ) )) .cse0 .cse1 )))
if ((< (+ (- 9) i_T3 ) 0 ) && (= (+ (- 1) in_T3 ) 0 ))
#line 103
tmp_T3 = 1 + tmp_T3;

(let ((.cse4 (<= i_T3 0 )) (.cse0 (= (+ in_T3 (- 1 ) ) 0 )) ) (let ((.cse2 (and .cse4 .cse0 )) (.cse3 (<= (+ i_T3 (- 8 ) ) 0 )) ) (and (let ((.cse1 (and (not .cse3 ) .cse4 )) ) (or (and (or (and (<= tmp_T3 21 ) (<= 0 (+ tmp_T3 (- 21 ) ) ) ) (and .cse0 .cse1 ) .cse1 ) .cse0 .cse2 ) .cse1 )) .cse0 .cse2 (or .cse3 .cse4 ) )))
if ((< (+ (- 9) i_T3 ) 0 ) && (= (+ (- 1) in_T3 ) 0 ))
#line 104
x = tmp_T3;

(let ((.cse0 (= (+ in_T3 (- 1 ) ) 0 )) ) (and (<= x 21 ) (<= 0 (+ x (- 21 ) ) ) .cse0 (and (<= i_T3 0 ) .cse0 ) ))
if ((= (+ (- 1) in_T3 ) 0 ))
#line 106
i_T3 = 1 + i_T3;

(and (<= x 21 ) (<= 0 (+ x (- 21 ) ) ) (= (+ in_T3 (- 1 ) ) 0 ) (<= i_T3 1 ) )
if ((< (+ (- 9) i_T3 ) 0 ) && (= (+ (- 1) in_T3 ) 0 ))
#line 108
tmp_T3 = x;

(let ((.cse0 (= (+ in_T3 (- 1 ) ) 0 )) (.cse1 (<= (+ i_T3 (- 8 ) ) 0 )) (.cse2 (<= i_T3 1 )) ) (or (and (<= tmp_T3 21 ) (<= 0 (+ tmp_T3 (- 21 ) ) ) .cse0 (or .cse1 .cse2 ) ) (and .cse0 (and (not .cse1 ) .cse2 ) ) ))
if ((< (+ (- 9) i_T3 ) 0 ) && (= (+ (- 1) in_T3 ) 0 ))
#line 109
tmp_T3 = 1 + tmp_T3;

(let ((.cse0 (not (<= (+ i_T3 (- 8 ) ) 0 ) )) (.cse2 (and (= (+ in_T3 (- 1 ) ) 0 ) (and (<= tmp_T3 22 ) (<= 0 (+ tmp_T3 (- 22 ) ) ) ) )) ) (let ((.cse1 (ite .cse0 (<= i_T3 1 ) .cse2 )) ) (or (ite .cse0 .cse1 .cse2 ) .cse1 )))
if ((< (+ (- 9) i_T3 ) 0 ) && (= (+ (- 1) in_T3 ) 0 ))
#line 110
x = tmp_T3;

(and (<= x 22 ) (<= 0 (+ x (- 22 ) ) ) )
#line 113
in_T1 = 1;

(and (<= x 22 ) (<= 0 (+ x (- 22 ) ) ) (= (+ in_T1 (- 1 ) ) 0 ) )
if ((= (+ (- 1) in_T1 ) 0 ))
#line 115
i_T1 = 0;

(let ((.cse0 (= (+ in_T1 (- 1 ) ) 0 )) (.cse1 (<= i_T1 0 )) ) (and (<= x 22 ) (<= 0 (+ x (- 22 ) ) ) .cse0 (and .cse1 .cse0 ) (and .cse0 .cse1 ) ))
if ((< (+ (- 9) i_T1 ) 0 ) && (= (+ (- 1) in_T1 ) 0 ))
#line 117
tmp_T1 = x;

(let ((.cse4 (<= i_T1 0 )) (.cse0 (= (+ in_T1 (- 1 ) ) 0 )) ) (let ((.cse1 (and .cse4 .cse0 )) ) (and (let ((.cse2 (<= (+ i_T1 (- 8 ) ) 0 )) (.cse3 (and .cse0 .cse4 )) ) (or (and (<= tmp_T1 22 ) (<= 0 (+ tmp_T1 (- 22 ) ) ) .cse0 .cse1 (or .cse2 .cse3 ) ) (and .cse0 (and (not .cse2 ) .cse3 ) ) )) .cse0 .cse1 )))
if ((< (+ (- 9) i_T1 ) 0 ) && (= (+ (- 1) in_T1 ) 0 ))
#line 118
tmp_T1 = 1 + tmp_T1;

(let ((.cse4 (<= i_T1 0 )) (.cse0 (= (+ in_T1 (- 1 ) ) 0 )) ) (let ((.cse2 (and .cse4 .cse0 )) (.cse3 (<= (+ i_T1 (- 8 ) ) 0 )) ) (and (let ((.cse1 (and (not .cse3 ) .cse4 )) ) (or (and (or (and (<= tmp_T1 23 ) (<= 0 (+ tmp_T1 (- 23 ) ) ) ) (and .cse0 .cse1 ) .cse1 ) .cse0 .cse2 ) .cse1 )) .cse0 .cse2 (or .cse3 .cse4 ) )))
if ((< (+ (- 9) i_T1 ) 0 ) && (= (+ (- 1) in_T1 ) 0 ))
#line 119
x = tmp_T1;

(let ((.cse0 (= (+ in_T1 (- 1 ) ) 0 )) ) (and (<= x 23 ) (<= 0 (+ x (- 23 ) ) ) .cse0 (and (<= i_T1 0 ) .cse0 ) ))
if ((= (+ (- 1) in_T1 ) 0 ))
#line 121
i_T1 = 1 + i_T1;

(and (<= x 23 ) (<= 0 (+ x (- 23 ) ) ) (= (+ in_T1 (- 1 ) ) 0 ) (<= i_T1 1 ) )
if ((< (+ (- 9) i_T1 ) 0 ) && (= (+ (- 1) in_T1 ) 0 ))
#line 123
tmp_T1 = x;

(let ((.cse2 (<= (+ i_T1 (- 8 ) ) 0 )) (.cse3 (<= i_T1 1 )) ) (let ((.cse0 (= (+ in_T1 (- 1 ) ) 0 )) (.cse1 (or .cse2 .cse3 )) ) (and (or (and (<= tmp_T1 23 ) (<= 0 (+ tmp_T1 (- 23 ) ) ) .cse0 .cse1 ) (and .cse0 (and (not .cse2 ) .cse3 ) ) ) .cse0 .cse1 )))
if ((< (+ (- 9) i_T1 ) 0 ) && (= (+ (- 1) in_T1 ) 0 ))
#line 124
tmp_T1 = 1 + tmp_T1;

(let ((.cse0 (not (<= (+ i_T1 (- 8 ) ) 0 ) )) (.cse1 (and (= (+ in_T1 (- 1 ) ) 0 ) (let ((.cse2 (- tmp_T1 )) ) (ite (<= (+ .cse2 25 ) 0 ) (<= tmp_T1 24 ) (or (<= (+ .cse2 24 ) 0 ) (<= 0 (+ tmp_T1 (- 24 ) ) ) ) )) )) ) (or (and (not .cse0 ) .cse1 ) (ite .cse0 (<= i_T1 1 ) .cse1 ) ))
if ((< (+ (- 9) i_T1 ) 0 ) && (= (+ (- 1) in_T1 ) 0 ))
#line 126
assert(-24 + tmp_T1 != 0);
